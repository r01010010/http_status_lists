0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.1.8
3 info using node@v0.10.33
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/r01010010/Projects/http_status_lists',
7 silly cache add   type: 'directory' }
8 verbose tar pack [ '/Users/r01010010/.npm/http_status_lists/0.0.1/package.tgz',
8 verbose tar pack   '/Users/r01010010/Projects/http_status_lists' ]
9 verbose tarball /Users/r01010010/.npm/http_status_lists/0.0.1/package.tgz
10 verbose folder /Users/r01010010/Projects/http_status_lists
11 info prepublish http_status_lists@0.0.1
12 verbose addLocalTarball adding from inside cache /Users/r01010010/.npm/http_status_lists/0.0.1/package.tgz
13 silly cache afterAdd http_status_lists@0.0.1
14 verbose afterAdd /Users/r01010010/.npm/http_status_lists/0.0.1/package/package.json not in flight; writing
15 verbose afterAdd /Users/r01010010/.npm/http_status_lists/0.0.1/package/package.json written
16 silly publish { name: 'http_status_lists',
16 silly publish   version: '0.0.1',
16 silly publish   description: 'HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes',
16 silly publish   author: { name: 'Paloma Jiménez', email: 'r01010010@gmail.com' },
16 silly publish   keywords: [ 'http', 'status', 'codes', 'rest', 'services' ],
16 silly publish   repository:
16 silly publish    { type: 'git',
16 silly publish      url: 'http://github.com/r01010010/http_status_codes_extended' },
16 silly publish   bugs:
16 silly publish    { url: 'http://github.com/r01010010/http_status_codes_extended/issues',
16 silly publish      email: 'r01010010@gmail.com' },
16 silly publish   devDependencies: {},
16 silly publish   contributors: [],
16 silly publish   main: './lib/HTTPStatus',
16 silly publish   engines: { node: '>= 0.4.0' },
16 silly publish   scripts: { test: 'mocha' },
16 silly publish   readme: '# HTTP Status codes for node\n\nUtility to interact with HTTP status codes grouped by categories (All, REST, Successful, Errors, etc)\n\n## This module is a fork\nThis module is based on https://github.com/wdavidw/node-http-status\n\n## Usage\n\nOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\n\n## API\n\nThis module is extremely simple.\n\n### API sample\n\n```javascript\n    var HTTPStatus = require(\'http-status-lists\');\n\n    // Print "Internal Server Error"\n    console.log(HTTPStatus.ALL[500]);\n\n    // Print 500\n    console.log(HTTPStatus.ALL.C500_INTERNAL_SERVER_ERROR);\n\n    // Print 201 with using the REST commonly used group\n    console.log(HTTPStatus.REST.C201_CREATED);\n```\n\nContributors\n------------\n\n*   Paloma Jiménez: r01010010@gmail.com\n',
16 silly publish   readmeFilename: 'README.md',
16 silly publish   gitHead: '564c9476fdc81d854344445645455a45913afbeb',
16 silly publish   homepage: 'https://github.com/r01010010/http_status_codes_extended',
16 silly publish   _id: 'http_status_lists@0.0.1',
16 silly publish   _shasum: '0e5c1e0181bca487537b572f5ca5bdab56b2b017',
16 silly publish   _from: '.' }
17 silly mapToRegistry name http_status_lists
18 silly mapToRegistry using default registry
19 silly mapToRegistry registry https://registry.npmjs.org/
20 silly mapToRegistry uri https://registry.npmjs.org/http_status_lists
21 verbose publish registryBase https://registry.npmjs.org/
22 silly publish uploading /Users/r01010010/.npm/http_status_lists/0.0.1/package.tgz
23 verbose request uri https://registry.npmjs.org/http_status_lists
24 verbose request sending authorization for write operation
25 info attempt registry request try #1 at 18:07:10
26 verbose request id f2cf2bf28366af59
27 http request PUT https://registry.npmjs.org/http_status_lists
28 http 403 https://registry.npmjs.org/http_status_lists
29 verbose headers { date: 'Sat, 14 Feb 2015 17:07:10 GMT',
29 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
29 verbose headers   'content-type': 'application/json',
29 verbose headers   'cache-control': 'max-age=60',
29 verbose headers   'content-length': '3754',
29 verbose headers   'accept-ranges': 'bytes',
29 verbose headers   via: '1.1 varnish',
29 verbose headers   'x-served-by': 'cache-ams4141-AMS',
29 verbose headers   'x-cache': 'MISS',
29 verbose headers   'x-cache-hits': '0',
29 verbose headers   'x-timer': 'S1423933630.076304,VS0,VE754',
29 verbose headers   'keep-alive': 'timeout=10, max=50',
29 verbose headers   connection: 'Keep-Alive' }
30 verbose request invalidating /Users/r01010010/.npm/registry.npmjs.org/http_status_lists on PUT
31 error publish Failed PUT 403
32 verbose stack Error: forbidden cannot modify pre-existing version: 0.0.1
32 verbose stack old={"name":"http_status_lists","version":"0.0.1","description":"HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes","homepage":"http://www.adaltas.com/projects/node-http-status","author":{"name":"Paloma Jiménez","email":"r01010010@gmail.com"},"keywords":["http","status","codes","rest","services"],"repository":{"type":"git","url":"http://github.com/r01010010/http_status_codes_extended"},"bugs":{"url":"http://github.com/r01010010/http_status_codes_extended/issues","email":"r01010010@gmail.com"},"devDependencies":{},"contributors":[],"main":"./lib/HTTPStatus","engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha"},"gitHead":"a7e62095dfb06d50e5273aa53f5de49f2a956be0","_id":"http_status_lists@0.0.1","_shasum":"c412377ff639f51838f7b286eda9cb3234cbddc5","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.10.33","_npmUser":{"name":"r01010010","email":"r01010010@gmail.com"},"maintainers":[{"name":"r01010010","email":"r01010010@gmail.com"}],"dist":{"shasum":"c412377ff639f51838f7b286eda9cb3234cbddc5","tarball":"http://registry.npmjs.org/http_status_lists/-/http_status_lists-0.0.1.tgz"}}
32 verbose stack new={"name":"http_status_lists","version":"0.0.1","description":"HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes","author":{"name":"Paloma Jiménez","email":"r01010010@gmail.com"},"keywords":["http","status","codes","rest","services"],"repository":{"type":"git","url":"http://github.com/r01010010/http_status_codes_extended"},"bugs":{"url":"http://github.com/r01010010/http_status_codes_extended/issues","email":"r01010010@gmail.com"},"devDependencies":{},"contributors":[],"main":"./lib/HTTPStatus","engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha"},"readme":"# HTTP Status codes for node\u000a\u000aUtility to interact with HTTP status codes grouped by categories (All, REST, Successful, Errors, etc)\u000a\u000a## This module is a fork\u000aThis module is based on https://github.com/wdavidw/node-http-status\u000a\u000a## Usage\u000a\u000aOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\u000a\u000a## API\u000a\u000aThis module is extremely simple.\u000a\u000a### API sample\u000a\u000a```javascript\u000a    var HTTPStatus = require('http-status-lists');\u000a\u000a    // Print \"Internal Server Error\"\u000a    console.log(HTTPStatus.ALL[500]);\u000a\u000a    // Print 500\u000a    console.log(HTTPStatus.ALL.C500_INTERNAL_SERVER_ERROR);\u000a\u000a    // Print 201 with using the REST commonly used group\u000a    console.log(HTTPStatus.REST.C201_CREATED);\u000a```\u000a\u000aContributors\u000a------------\u000a\u000a*   Paloma Jiménez: r01010010@gmail.com\u000a","readmeFilename":"README.md","gitHead":"564c9476fdc81d854344445645455a45913afbeb","homepage":"https://github.com/r01010010/http_status_codes_extended","_id":"http_status_lists@0.0.1","_shasum":"0e5c1e0181bca487537b572f5ca5bdab56b2b017","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.10.33","_npmUser":{"name":"r01010010","email":"r01010010@gmail.com"},"maintainers":[{"name":"r01010010","email":"r01010010@gmail.com"}],"dist":{"shasum":"0e5c1e0181bca487537b572f5ca5bdab56b2b017","tarball":"http://registry.npmjs.org/http_status_lists/-/http_status_lists-0.0.1.tgz"}}: http_status_lists
32 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:234:14)
32 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
32 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/node_modules/request/request.js:372:22)
32 verbose stack     at Request.emit (events.js:98:17)
32 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/node_modules/request/request.js:1317:14)
32 verbose stack     at Request.emit (events.js:117:20)
32 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/node_modules/request/request.js:1265:12)
32 verbose stack     at IncomingMessage.emit (events.js:117:20)
32 verbose stack     at _stream_readable.js:943:16
32 verbose stack     at process._tickCallback (node.js:419:13)
33 verbose statusCode 403
34 verbose pkgid http_status_lists
35 verbose cwd /Users/r01010010/Projects/http_status_lists
36 error Darwin 14.0.0
37 error argv "node" "/usr/local/bin/npm" "publish"
38 error node v0.10.33
39 error npm  v2.1.8
40 error code E403
41 error forbidden cannot modify pre-existing version: 0.0.1
41 error old={"name":"http_status_lists","version":"0.0.1","description":"HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes","homepage":"http://www.adaltas.com/projects/node-http-status","author":{"name":"Paloma Jiménez","email":"r01010010@gmail.com"},"keywords":["http","status","codes","rest","services"],"repository":{"type":"git","url":"http://github.com/r01010010/http_status_codes_extended"},"bugs":{"url":"http://github.com/r01010010/http_status_codes_extended/issues","email":"r01010010@gmail.com"},"devDependencies":{},"contributors":[],"main":"./lib/HTTPStatus","engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha"},"gitHead":"a7e62095dfb06d50e5273aa53f5de49f2a956be0","_id":"http_status_lists@0.0.1","_shasum":"c412377ff639f51838f7b286eda9cb3234cbddc5","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.10.33","_npmUser":{"name":"r01010010","email":"r01010010@gmail.com"},"maintainers":[{"name":"r01010010","email":"r01010010@gmail.com"}],"dist":{"shasum":"c412377ff639f51838f7b286eda9cb3234cbddc5","tarball":"http://registry.npmjs.org/http_status_lists/-/http_status_lists-0.0.1.tgz"}}
41 error new={"name":"http_status_lists","version":"0.0.1","description":"HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes","author":{"name":"Paloma Jiménez","email":"r01010010@gmail.com"},"keywords":["http","status","codes","rest","services"],"repository":{"type":"git","url":"http://github.com/r01010010/http_status_codes_extended"},"bugs":{"url":"http://github.com/r01010010/http_status_codes_extended/issues","email":"r01010010@gmail.com"},"devDependencies":{},"contributors":[],"main":"./lib/HTTPStatus","engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha"},"readme":"# HTTP Status codes for node\u000a\u000aUtility to interact with HTTP status codes grouped by categories (All, REST, Successful, Errors, etc)\u000a\u000a## This module is a fork\u000aThis module is based on https://github.com/wdavidw/node-http-status\u000a\u000a## Usage\u000a\u000aOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\u000a\u000a## API\u000a\u000aThis module is extremely simple.\u000a\u000a### API sample\u000a\u000a```javascript\u000a    var HTTPStatus = require('http-status-lists');\u000a\u000a    // Print \"Internal Server Error\"\u000a    console.log(HTTPStatus.ALL[500]);\u000a\u000a    // Print 500\u000a    console.log(HTTPStatus.ALL.C500_INTERNAL_SERVER_ERROR);\u000a\u000a    // Print 201 with using the REST commonly used group\u000a    console.log(HTTPStatus.REST.C201_CREATED);\u000a```\u000a\u000aContributors\u000a------------\u000a\u000a*   Paloma Jiménez: r01010010@gmail.com\u000a","readmeFilename":"README.md","gitHead":"564c9476fdc81d854344445645455a45913afbeb","homepage":"https://github.com/r01010010/http_status_codes_extended","_id":"http_status_lists@0.0.1","_shasum":"0e5c1e0181bca487537b572f5ca5bdab56b2b017","_from":".","_npmVersion":"2.1.8","_nodeVersion":"0.10.33","_npmUser":{"name":"r01010010","email":"r01010010@gmail.com"},"maintainers":[{"name":"r01010010","email":"r01010010@gmail.com"}],"dist":{"shasum":"0e5c1e0181bca487537b572f5ca5bdab56b2b017","tarball":"http://registry.npmjs.org/http_status_lists/-/http_status_lists-0.0.1.tgz"}}: http_status_lists
42 error If you need help, you may report this error at:
42 error     <http://github.com/npm/npm/issues>
43 verbose exit [ 1, true ]
